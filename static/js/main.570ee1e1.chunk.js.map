{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","NONE","setSortType","setReversed","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAYC,GAC7B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAMe,EAAM,WACjB,MAAgCC,mBAAShB,EAASiB,MAAlD,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOX,EAAP,KAAmBc,EAAnB,KAaA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBhB,IAAaJ,EAASU,SAAW,GAAK,YACnEY,QAjBW,kBAAMJ,EAAYlB,EAASU,WAcxC,iCAQA,wBACEW,KAAK,SACLD,UAAS,4BAAuBhB,IAAaJ,EAASY,OAAS,GAAK,YACpEU,QAvBa,kBAAMJ,EAAYlB,EAASY,SAoB1C,4BAQA,wBACES,KAAK,SACLD,UAAS,4BAAuBf,EAAa,GAAK,YAClDiB,QA7BS,kBAAMH,GAAad,IA0B9B,qBAQGA,GAAcD,IAAaJ,EAASiB,KAEjC,wBACEI,KAAK,SACLD,UAAU,4BACVE,QArCA,WACZJ,EAAYlB,EAASiB,MACrBE,GAAY,IAgCF,mBAOE,MAIV,6BACE,6BACGjB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CkB,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cChHtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.570ee1e1.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n// import { sortedLastIndexBy } from 'cypress/types/lodash';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1: string, g2: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReversed] = useState(false);\n\n  const alphSorted = () => setSortType(SortType.ALPHABET);\n\n  const lengthSorted = () => setSortType(SortType.LENGTH);\n\n  const reversed = () => setReversed(!isReversed);\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={alphSorted}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={lengthSorted}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={reversed}\n        >\n          Reverse\n        </button>\n        {\n          (isReversed || sortType !== SortType.NONE)\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            ) : ''\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}